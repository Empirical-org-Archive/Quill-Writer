var User = require('./../../common/services/user/');

angular.module('quill-writer.home', [
    'ui.router'
  ])

  .config(function($stateProvider) {
    $stateProvider
      .state('quill-writer.home', {
        // Parameters: uid = activity UID, student = activity session UID, form = flag to show the admin form
        url: '/{shortcode:[a-z]{0,3}}?uid&student&form',
        views: {
          'content@': {
            templateUrl: 'home.tpl.html',
            controller: 'HomeCtrl as home'
          }
        }
      });
  })

  .controller('HomeCtrl', function($state, User, Link, Partner, Empirical, _){
    var home = this;

    home.setUser = function(user) {
      User.setCurrentUser(user);
      $state.go('quill-writer.game');
    };

    // FIXME: Unused, remove.
    function continueWithValidSession() {
      if ($state.params.uid && $state.params.sid && $state.params.activityPrompt) {
        home.setUser({
          uid: $state.params.uid,
          sid: $state.params.sid,
          activityPrompt: $state.params.activityPrompt
        });
      } else {
        var user = User.getUserFromLocalStorage();
        if (user) {
          home.setUser(user);
        }
      }
    }

    home.trySampleActivity = function() {
      $state.go('quill-writer.sample');
    };

    home.createNewActivity = function() {
      $state.go('quill-writer.form');
    };

    // If a shortcode was provided, load the game as a partner.
    if (typeof $state.params.shortcode !== 'undefined' && $state.params.shortcode !== "") {
      startGameFromShortcode();
    } else if (!_.isUndefined($state.params.student)) {
      startGameFromLms();
    } else if ($state.params.form === "true") {
      goToAdminForm();
    } else {
      // FIXME: This home page should be unreachable for now.
      runActivityLoader();
    }

    function goToAdminForm() {
      $state.go('quill-writer.form', {uid: $state.params.uid});
    }

    function startGameFromShortcode() {
      var shortcode = $state.params.shortcode;
      Link.mapShortcode(shortcode)
      .then(function(params) {
        Partner.setIAmPartner(true);
        $state.go('quill-writer.game', {
          sid: params.sid,
          uid: params.partnerUID,
          activityPrompt: params.activityPrompt
        });
        Link.removeShortCodeMapping(shortcode);
      }, function() {
        console.log('shortcode not found');
      });      
    }

    // Start the game from the link generated by the LMS.
    function startGameFromLms() {
      $state.go('quill-writer.link', {
        id: $state.params.uid, // activity UID
        activitySessionUid: $state.params.student // activity session UID
      });
    }

    // Retrieve the lists of available activities and subjects for the home page.
    function runActivityLoader() {
      Empirical.getGroupedByPublicPromptsAndSubject().then(function(prompts) {
        home.prompts = prompts;
        home.subjects = _.keys(prompts);
      });
    }

    home.changeSubject = function(subject) {
      if (home.prompts[subject]) {
        home.activities = home.prompts[subject];
      }
    };

    home.selectActivity = function(activity) {
      $state.go('quill-writer.link', {
        id: activity.$id
      });
    }
  })

;

module.exports = 'quill-writer.home';
